@use "@styles/module-imports" as *;

.navBar {
  position: sticky;
  flex-direction: column;
  display: flex;
  top: 0;
  align-items: center;
  font-size: 14px;
  background-color: $black;
  height: 70px;
  z-index: 10;
  color: $white;

  @include media(laptops) {
    flex-direction: row;
  }
}
.navItemHolder {
  display: flex;
  flex-direction: row;
  width: 100%;
  justify-content: space-between;
  margin: 10px 0px;
}

.mainLogoWidth {
  width: 200px;
  margin-left: 10px;
}

button {
  background-color: transparent;
  border: none;
}

.hamburger {
  width: 20px;
  cursor: pointer;
  margin-right: 10px;

  @include media(laptops) {
    display: none;
  }
}

.overlayMenuOpen {
  width: 100%;
  @include media(laptops) {
    margin-right: 10px;
  }
}
.overlayMenu {
  position: fixed;
  top: 55px;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(15px);
  z-index: 10;
  transition: all 0.3s ease;
  display: none;
  overflow: hidden;
  overflow-y: hidden;

  &.active {
    display: block;
  }

  @include media(laptops) {
    backdrop-filter: none;
    background: transparent;
    display: block;
  }
}

.navItem {
  display: grid;
  width: 100%;

  border-radius :hover {
    background-color: $pink;
    // margin: 0px 7px;
    transition: transform 0.3s ease;
    border: none;
  }

  @include media(laptops) {
    display: flex;
    height: auto;
    // margin-right: 5px;
    justify-content: flex-end;
  }

  @include media(large-desktops) {
    gap: 5px;
    margin-right: 20px;
  }
}

.hamburgMenuOpen {
  background-color: red;
  height: 100%;
  width: 100%;
}

.linkItem {
  text-decoration: none;
  color: white;
  display: inline-block;
  background-color: black;
  padding: 7px 0px;
  text-align: center;

  @include media(laptops) {
    padding: 0px 10px;
  }

  .text {
    position: relative; // Ensure pseudo-elements are relative to this text
    z-index: 1;

    &::after {
      content: ""; // Pseudo-element for the pink rectangle
      position: absolute;
      left: -10px;
      border-radius: 10px;
      padding: 0px 10px;
      bottom: 0; // Align at the bottom
      width: 100%; // Half the width of the text container
      height: 40%; // Half the height of the text container
      background-color: $pink; // The desired pink color
      transform: scaleY(0); // Initially hidden
      transform-origin: bottom; // Expand from the bottom
      transition: transform 0.3s ease; // Smooth animation
      z-index: -1; // Ensure itâ€™s behind the text
    }

    &:hover::after {
      transform: scaleY(1); // Reveal the pink rectangle on hover
    }
  }

  &.active .text::after {
    transform: scaleY(1); // Keep the rectangle visible when the link is active
  }
}
